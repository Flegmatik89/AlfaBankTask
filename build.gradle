plugins {
    id 'java'
    id 'io.qameta.allure' version "2.12.0"
}

group 'org.example'
version '1.0-SNAPSHOT'

def allureVersion = "2.12.0",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.32"

repositories {
    mavenCentral()
    gradlePluginPortal()
    mavenLocal()
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "io.qameta.allure:allure-junit5:$allureVersion",
            "com.codeborne:selenide:5.25.0",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-java-commons:$allureVersion",
            "org.aspectj:aspectjweaver:1.9.19",
            "io.appium:java-client:7.6.0",
            "org.junit.platform:junit-platform-suite:1.10.2"
    )

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    )
}

allprojects {
    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = 'UTF-8'
        }
    }
}

tasks.register('generateAllureReport', Exec) {
    commandLine "allure", "generate build/allure-results"
}

test {
    useJUnitPlatform()
}